package gui.view;

import ejbView.ReportMonthAnalysisSales;
import ejbView.ReportMonthVisitSales;
import ejb.Staff;

import bl.ReportMonthAnalysisSalesInterface;
import bl.ReportMonthVisitSalesInterface;
import bl.ReportMonthAnalysisSalesRepository;
import bl.ReportMonthVisitSalesRepository;

import gui.model.ReportMonthAnalysisSalesTableModel;
import gui.model.ReportMonthVisitSalesTableModel;

import java.awt.Dimension;

import java.util.List;
import javax.swing.JOptionPane;

import java.io.File;
import java.io.FileNotFoundException;

import java.io.FileOutputStream;
import java.io.IOException;
import java.util.TreeMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManager;
import javax.swing.JFileChooser;
import javax.swing.JTable;
import javax.swing.table.TableModel;
import org.apache.poi.hssf.usermodel.HSSFCellStyle;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.util.CellRangeAddress;
import org.apache.poi.xssf.usermodel.XSSFCellStyle;
import org.apache.poi.xssf.usermodel.XSSFColor;
import org.apache.poi.xssf.usermodel.XSSFFont;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

public class PrintReports extends javax.swing.JInternalFrame {
    
    Staff currentUser;
    EntityManager entityManager;
    
    ReportMonthAnalysisSalesInterface analysisSalesIr;
    ReportMonthVisitSalesInterface visitSalesIr;
    
    ReportMonthAnalysisSalesTableModel analysisSalesTM;
    ReportMonthVisitSalesTableModel visitSalesTM;
    public PrintReports(Staff currentUser,EntityManager entityManager) {
        this.currentUser=currentUser;
        this.entityManager=entityManager;
        initComponents();
        initInterfaces();
        initTableModels();
        this.setLocation(220, 10);
        this.setPreferredSize(new Dimension(1100, 654));
        reportMonthSalesTableLoad();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        reportMonthSalesTbl = new javax.swing.JTable();
        background = new javax.swing.JLabel();

        setClosable(true);
        setTitle("Print Reports");
        setMaximumSize(new java.awt.Dimension(1100, 654));
        setMinimumSize(new java.awt.Dimension(1100, 654));
        setPreferredSize(new java.awt.Dimension(1100, 654));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));
        jPanel1.setLayout(null);

        jButton1.setBackground(new java.awt.Color(0, 153, 102));
        jButton1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(204, 255, 204));
        jButton1.setText("Printo Excel");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(20, 20, 215, 46);

        reportMonthSalesTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(reportMonthSalesTbl);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(10, 82, 1050, 530);

        background.setBackground(new java.awt.Color(102, 102, 102));
        jPanel1.add(background);
        background.setBounds(0, 0, 1075, 620);

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1080, 620));

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void reportMonthSalesTableLoad(){
        if(currentUser.getRole().equals("Doctor")){
            List<ReportMonthVisitSales>visitSales=visitSalesIr.findAll();
            visitSalesTM.add(visitSales);
            reportMonthSalesTbl.setModel(visitSalesTM);
            visitSalesTM.fireTableDataChanged();
        }
        else if(currentUser.getRole().equals("LaboratorTechnician")){
            List<ReportMonthAnalysisSales>analysisSales=analysisSalesIr.findAll();
            analysisSalesTM.add(analysisSales);
            reportMonthSalesTbl.setModel(analysisSalesTM);
            analysisSalesTM.fireTableDataChanged();
        }
    }
    
    private void exportExcel(String directory) throws IOException{
        XSSFWorkbook wb=new XSSFWorkbook();
        XSSFSheet ws=wb.createSheet();
        TableModel tm=reportMonthSalesTbl.getModel();
        int rows=tm.getRowCount();
        int columns=tm.getColumnCount();
        
        
        TreeMap<String ,Object[]> data=new TreeMap<>();
        
        String[] strs=new String [columns];
        
        
        
        
        
        for(int i=0;i<columns;i++){
            strs[i]=tm.getColumnName(i);
        }
        
        data.put("-1", strs);
        
        Object[] o;
        for(int i=0;i<rows;i++){
            o=new Object[columns];
            for(int j=0;j<columns;j++){
                o[j]= tm.getValueAt(i, j);
            }
         data.put(Integer.toString(i),o);
         
        }
        
        
        XSSFRow row;
        int rowID=0;
        
        int [] keyat=new int[rows+1];
        
        for(int i=0;i<rows+1;i++){
            keyat[i]=i-1;
        }
        
        
        
        for(int key: keyat){
            row=ws.createRow(rowID++);
            Object[] values=data.get(Integer.toString(key));
            int cellID=0;
            for(Object obj: values){
                Cell cell=row.createCell(cellID++);
                cell.setCellValue(obj.toString());
                
            }
        }
        
        for(int i=0;i<columns;i++){
            ws.autoSizeColumn(i);
        }
        
        
        XSSFCellStyle style =wb.createCellStyle();
        style.setFillForegroundColor(new XSSFColor(new java.awt.Color(53,100,57)));
        style.setFillPattern(CellStyle.SOLID_FOREGROUND);
        style.setBorderBottom(HSSFCellStyle.BORDER_THIN);
        style.setBottomBorderColor(IndexedColors.RED.getIndex());
        XSSFFont font = wb.createFont();
        font.setColor(IndexedColors.WHITE.getIndex());
        font.setBold(true);
        font.setFontHeight(12);
        style.setFont(font);
        
        XSSFCellStyle style2 =wb.createCellStyle();
        style2.setBorderBottom(HSSFCellStyle.BORDER_DOTTED);
        style2.setBorderTop(HSSFCellStyle.BORDER_DOTTED);
        style2.setBorderLeft(HSSFCellStyle.BORDER_NONE);
        style2.setBorderRight(HSSFCellStyle.BORDER_NONE);
        style2.setBottomBorderColor(IndexedColors.RED.getIndex());
        style2.setTopBorderColor(IndexedColors.RED.getIndex());
        for(int i=0;i<tm.getColumnCount();i++){
            ws.getRow(0).getCell(i).setCellStyle(style);
            
        }
        
        for(int i=0;i<tm.getColumnCount();i++){
            for(int j=0;j<tm.getRowCount();j++){
                if(j!=0){
                    ws.getRow(j).getCell(i).setCellStyle(style2);
                } 
            }     
        }
        String r=rows+"";
        String r2=getCol(columns);
        
        String range="A1:"+r2+r;
        
        ws.setAutoFilter(CellRangeAddress.valueOf(range));
        ws.setDisplayGridlines(true);
        
        
        /*if(tbl.getModel()==tvtm)
            exportTrainingView(tm,ws);
        else if(tbl.getModel()==pvtm)
            exportParticipantView(tm,ws);  
        else if(tbl.getModel()==rtevvtm){
            exportEvaluationView(tm,ws);
        }*/
        try{
            FileOutputStream fos;
            fos = new FileOutputStream(new File(directory+emertoFilin(reportMonthSalesTbl)+".xlsx"));
             
            wb.write(fos);
            fos.close();
            JOptionPane.showMessageDialog(null,"U ruajt me sukses");
        }catch (FileNotFoundException ex) {
            JOptionPane.showMessageDialog(null,"File është i hapur.Mbylleni file-in per ta ruajtur");
        }
        
    }
    
    
    
    public String getCol(int i){
        switch(i){
            case 0:
                return "A";
            case 1:
                return "A";
            case 2:
                return "B";
            case 3:
                return "C";
            case 4:
                return "D";
            case 5:
                return "E";
            case 6:
                return "F";
            case 7:
                return "G";
            case 8:
                return "H";
            case 9:
                return "I";
            case 10:
                return "J";
            case 11:
                return "K";
            case 12:
                return "L";
            case 13:
                return "M";
            case 14:
                return "N";
            case 15:
                return "O";
            case 16:
                return "P";
            case 17:
                return "Q";
            case 18:
                return "R";
            case 19:
                return "S";
            case 20:
                return "T";    
            case 21:
                return "U";
            case 22:
                return "V";
            case 23:
                return "W";
            case 24:
                return "X";
            case 25:
                return "Y";
            case 26:
                return "Z";
            default:
                return null;
        }
    }
    
    private String emertoFilin(JTable tbl) {
     String t="Raport";
     
                
                if(tbl.getModel()==visitSalesTM||tbl.getModel()==analysisSalesTM){
                    t="Raporti i shitjeve "+currentUser.getName()+" "+currentUser.getSurname();
                }
                
        return t;
    }
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        JFileChooser chooser = new JFileChooser(); 
        chooser.setCurrentDirectory(new java.io.File("."));
        chooser.setDialogTitle("Chooser");
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        String directory="";
        //
        // disable the "All files" option.
        //
        chooser.setAcceptAllFileFilterUsed(false);
        //    
        
        if(chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION){
            
            directory=chooser.getSelectedFile().toString()+"\\";
            
            try {
                exportExcel(directory);
            } catch (IOException ex) {
                Logger.getLogger(PrintReports.class.getName()).log(Level.SEVERE, null, ex);
            }
       
        }
        else{
            JOptionPane.showMessageDialog(null, "Duhet te zgjedhni lokacionin se ku deshironi te ruani file ");
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed
    
    
    
    private void initInterfaces(){
        analysisSalesIr=new ReportMonthAnalysisSalesRepository(entityManager);
        visitSalesIr=new ReportMonthVisitSalesRepository(entityManager);
       
    }
    
    private void initTableModels(){
        String [] reportMonthAnalysisSalesColumnNames={"Year","Month","LaboratorTechnicianName","LaboratorTechnicianSurname","NumberOFAnalysis","Sales"};
        analysisSalesTM=new ReportMonthAnalysisSalesTableModel(currentUser,reportMonthAnalysisSalesColumnNames);
        String [] reportMonthVisitSalesColumnNames={"Year","Month","DoctorName","DoctorSurname","NumberOFVisits","Sales"};
        visitSalesTM=new ReportMonthVisitSalesTableModel(currentUser,reportMonthVisitSalesColumnNames);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel background;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable reportMonthSalesTbl;
    // End of variables declaration//GEN-END:variables
}
